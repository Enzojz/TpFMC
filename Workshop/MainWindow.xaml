<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:h="clr-namespace:HelixToolkit.Wpf;assembly=HelixToolkit.Wpf"
        xmlns:t="clr-namespace:TpfMC"
        xmlns:Command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        Title="Transport Fever Model Workshop" Height="800" Width="1500"
        x:Name="root"   
    >
    <Window.Resources>
        <Style x:Key="ValueBox" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border Name="Bd" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="LostFocus">
                                            <Command:EventToCommand Command="{Binding DataContext.UpdateGeometries, ElementName=root}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style.Setters>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="3*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <h:HelixViewport3D x:Name="vp" ZoomExtentsWhenLoaded="True" Grid.Column="1" Margin="10" Grid.RowSpan="3" Background="AliceBlue" BorderThickness="1" BorderBrush="Gray">
            <h:HelixVisual3D Content="{Binding Geometries}" />
            <h:GridLinesVisual3D Width="10" Length="10" MinorDistance="0.2" MajorDistance="1" Thickness="0.001"/>
            <h:LinesVisual3D Color="Red" Points="0 0 0 -1 0 0"/>
            <h:LinesVisual3D Color="Green" Points="0 0 0 0 -1 0"/>
            <h:LinesVisual3D Color="Blue" Points="0 0 0 0 0 1"/>
            <h:DirectionalHeadLight Position="{Binding Position, Mode=OneWay, ElementName=vp.DefaultCamera}" Brightness="0.25"/>
            <h:DirectionalHeadLight Position="{Binding Position, Mode=OneWay, ElementName=vp.DefaultCamera}" Brightness="0.25">
                <h:DirectionalHeadLight.Transform>
                    <RotateTransform3D>
                        <RotateTransform3D.Rotation>
                            <AxisAngleRotation3D Angle="30" Axis="1 0 0"/>
                        </RotateTransform3D.Rotation>
                    </RotateTransform3D>
                </h:DirectionalHeadLight.Transform>
            </h:DirectionalHeadLight>
            <h:DirectionalHeadLight Position="{Binding Position, Mode=OneWay, ElementName=vp.DefaultCamera}" Brightness="0.25">
                <h:DirectionalHeadLight.Transform>
                    <RotateTransform3D>
                        <RotateTransform3D.Rotation>
                            <AxisAngleRotation3D Angle="30" Axis="-1 0 0"/>
                        </RotateTransform3D.Rotation>
                    </RotateTransform3D>
                </h:DirectionalHeadLight.Transform>
            </h:DirectionalHeadLight>
            <h:DirectionalHeadLight Position="{Binding Position, Mode=OneWay, ElementName=vp.DefaultCamera}" Brightness="0.25">
                <h:DirectionalHeadLight.Transform>
                    <RotateTransform3D>
                        <RotateTransform3D.Rotation>
                            <AxisAngleRotation3D Angle="30" Axis="0 1 0"/>
                        </RotateTransform3D.Rotation>
                    </RotateTransform3D>
                </h:DirectionalHeadLight.Transform>
            </h:DirectionalHeadLight>
            <h:DirectionalHeadLight Position="{Binding Position, Mode=OneWay, ElementName=vp.DefaultCamera}" Brightness="0.25">
                <h:DirectionalHeadLight.Transform>
                    <RotateTransform3D>
                        <RotateTransform3D.Rotation>
                            <AxisAngleRotation3D Angle="30" Axis="0 -1 0"/>
                        </RotateTransform3D.Rotation>
                    </RotateTransform3D>
                </h:DirectionalHeadLight.Transform>
            </h:DirectionalHeadLight>
        </h:HelixViewport3D>

        <Button x:Name="loadButton" Padding="5" Content="Load or Drop files here" Margin="10" AllowDrop="True">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Drop">
                    <Command:EventToCommand Command="{Binding DropCommand}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Click">
                    <Command:EventToCommand Command="{Binding ClickCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <GroupBox x:Name="fileList" Header="File list" Margin="5" Grid.Row="1">
            <ListBox x:Name="importFiles" Margin="5" ItemsSource="{Binding EntryList, Mode=OneWay}"
                     SelectedItem="{Binding DataContext.SelectedEntry, Mode=OneWayToSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBlock Text="{Binding Entry.filename}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </GroupBox>
        <GroupBox x:Name="meshList" Header="Mesh list" Margin="5" Grid.Row="2">
            <ListBox HorizontalContentAlignment="Stretch" x:Name="meshes" Margin="5" DataContext="{Binding SelectedItem, ElementName=importFiles}" ItemsSource="{Binding Meshes}" SelectedItem="{Binding DataContext.SelectedMesh, ElementName=root}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Tag="{Binding DataContext, ElementName=root}">
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Select all">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <Command:EventToCommand Command="{Binding PlacementTarget.Tag.SelectAll, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </MenuItem>
                                    <MenuItem Header="Select none">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <Command:EventToCommand Command="{Binding PlacementTarget.Tag.SelectNone, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </MenuItem>
                                    <MenuItem Header="Select this only">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <Command:EventToCommand Command="{Binding PlacementTarget.Tag.SelectOnlyItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                                                        CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </MenuItem>
                                    <MenuItem Header="Open destination">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <Command:EventToCommand Command="{Binding PlacementTarget.Tag.OpenOutput, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </MenuItem>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <CheckBox IsChecked="{Binding IsSelected}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <Command:EventToCommand Command="{Binding DataContext.UpdateGeometries, ElementName=root}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <Ellipse Margin="5, 0, 5, 0" Height="auto" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" StrokeThickness="4"  Stroke="Transparent">
                                <Ellipse.Fill>
                                    <SolidColorBrush Color="{Binding Color}"/>
                                </Ellipse.Fill>
                            </Ellipse>
                            <TextBlock Margin="0" Text="{Binding Name}" HorizontalAlignment="Stretch"/>
                            <TextBlock Margin="5, 0, 5, 0" HorizontalAlignment="Right" TextAlignment="Right">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsConverted}" Value="false">
                                                <Setter Property="Text" Value="⌛"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsConverted}" Value="true">
                                                <Setter Property="Text" Value="✔"/>
                                                <Setter Property="Foreground" Value="Green"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </GroupBox>
        <GroupBox x:Name="Output" Header="Output" Margin="5" Grid.Column="1" Grid.Row="3">
            <ListBox x:Name="Console" Margin="5" ItemsSource="{Binding DataContext.Console, Mode=OneWay, ElementName=root}" IsSynchronizedWithCurrentItem="True" 
                     SelectedIndex="{Binding DataContext.Console.Count, Mode=OneWay, ElementName=root}"/>
        </GroupBox>
        <Button Content="Convert" Margin="10" Grid.Column="2" Grid.Row="3">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <Command:EventToCommand Command="{Binding Convert}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Button>
        <GroupBox Header="Transformation" Grid.Column="2" Grid.RowSpan="3" Margin="10">
            <Grid Margin="5" DataContext="{Binding DataContext.SelectedMesh, Mode=OneWay, FallbackValue=null, ElementName=root}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Scales" Grid.ColumnSpan="3" />
                <Label Content="X" Grid.Column="0" Grid.Row="1" />
                <Label Content="Y" Grid.Column="1" Grid.Row="1" />
                <Label Content="Z" Grid.Column="2" Grid.Row="1" />
                <Label Content="Rotations" Grid.Row="3" Grid.ColumnSpan="3" />
                <Label Content="X (Roll)" Grid.Column="0" Grid.Row="4" />
                <Label Content="Y (Pitch)" Grid.Column="1" Grid.Row="4" />
                <Label Content="Z (Yaw)" Grid.Column="2" Grid.Row="4" />
                <Label Content="Translations" Grid.Row="6" Grid.ColumnSpan="3" />
                <Label Content="X"  Grid.Column="0" Grid.Row="7" />
                <Label Content="Y"  Grid.Column="1" Grid.Row="7" />
                <Label Content="Z"  Grid.Column="2" Grid.Row="7" />
                <Label Content="Model Transforms" Grid.Row="9" Grid.ColumnSpan="3" />

                <TextBox Margin="5" Grid.Column="0" Grid.Row="2" Text="{Binding UserTransform.Scale.X, Mode=TwoWay, FallbackValue=''}" Style="{StaticResource ValueBox}"/>
                <TextBox Margin="5" Grid.Column="1" Grid.Row="2" Text="{Binding UserTransform.Scale.Y, Mode=TwoWay, FallbackValue=''}" Style="{StaticResource ValueBox}"/>
                <TextBox Margin="5" Grid.Column="2" Grid.Row="2" Text="{Binding UserTransform.Scale.Z, Mode=TwoWay, FallbackValue=''}" Style="{StaticResource ValueBox}"/>

                <TextBox Margin="5" Grid.Column="0" Grid.Row="5" Text="{Binding UserTransform.Rotation.X, Mode=TwoWay, FallbackValue=''}" Style="{StaticResource ValueBox}"/>
                <TextBox Margin="5" Grid.Column="1" Grid.Row="5" Text="{Binding UserTransform.Rotation.Y, Mode=TwoWay, FallbackValue=''}" Style="{StaticResource ValueBox}"/>
                <TextBox Margin="5" Grid.Column="2" Grid.Row="5" Text="{Binding UserTransform.Rotation.Z, Mode=TwoWay, FallbackValue=''}" Style="{StaticResource ValueBox}"/>

                <TextBox Margin="5" Grid.Column="0" Grid.Row="8" Text="{Binding UserTransform.Translation.X, Mode=TwoWay, FallbackValue=''}" Style="{StaticResource ValueBox}"/>
                <TextBox Margin="5" Grid.Column="1" Grid.Row="8" Text="{Binding UserTransform.Translation.Y, Mode=TwoWay, FallbackValue=''}" Style="{StaticResource ValueBox}"/>
                <TextBox Margin="5" Grid.Column="2" Grid.Row="8" Text="{Binding UserTransform.Translation.Z, Mode=TwoWay, FallbackValue=''}" Style="{StaticResource ValueBox}"/>

                <ListView Margin="5" Grid.Row="10" Grid.ColumnSpan="3" ItemsSource="{Binding Transforms}" VerticalAlignment="Stretch">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding IsApplied, Mode=TwoWay}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <Command:EventToCommand Command="{Binding DataContext.UpdateGeometries, ElementName=root}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </CheckBox>
                                <ListView Margin="5, 0, 0, 0" ItemsSource="{Binding Description}" Background="Transparent" BorderThickness="0" FontFamily="Consolas">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                        <ContentPresenter />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>

                                        </Style>
                                    </ListView.ItemContainerStyle>
                                </ListView>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </GroupBox>
        <Grid Grid.Row="3" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Row="0" Grid.Column="0" Margin="5" Content="Select all">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <Command:EventToCommand Command="{Binding SelectAll}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Grid.Row="0" Grid.Column="1" Margin="5" Content="Select none">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <Command:EventToCommand Command="{Binding SelectNone}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="5" Content="Open destination">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <Command:EventToCommand Command="{Binding OpenOutput}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </Grid>
    </Grid>

</Window>